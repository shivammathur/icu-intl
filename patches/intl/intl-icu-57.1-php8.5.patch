From 3e7af2e82701b57962e9bee92b598e82246d3980 Mon Sep 17 00:00:00 2001
From: Shivam Mathur <shivam_jpr@hotmail.com>
Date: Tue, 26 Aug 2025 17:14:42 +0000
Subject: [PATCH] Revert: Bump ICU requirement to ICU >= 57.1

---
 build/php.m4                                 |  2 +-
 ext/intl/normalizer/normalizer.h             | 14 ++++++++++++
 ext/intl/normalizer/normalizer.stub.php      |  4 ++++
 ext/intl/normalizer/normalizer_normalize.cpp | 23 ++++++++++++++++++++
 ext/intl/php_intl.stub.php                   |  4 ++++
 ext/intl/timezone/timezone.stub.php          |  3 ++-
 ext/intl/timezone/timezone_methods.cpp       |  2 ++
 ext/intl/uchar/uchar.cpp                     |  2 ++
 ext/intl/uchar/uchar.stub.php                | 16 ++++++++++++++
 9 files changed, 68 insertions(+), 2 deletions(-)

diff --git a/build/php.m4 b/build/php.m4
index 94556cf648f..9b2b7831802 100644
--- a/build/php.m4
+++ b/build/php.m4
@@ -1741,7 +1741,7 @@ dnl
 dnl Common setup macro for ICU.
 dnl
 AC_DEFUN([PHP_SETUP_ICU],[
-  PKG_CHECK_MODULES([ICU], [icu-uc >= 57.1 icu-io icu-i18n])
+  PKG_CHECK_MODULES([ICU], [icu-uc >= 50.1 icu-io icu-i18n])
 
   PHP_EVAL_INCLINE([$ICU_CFLAGS])
   PHP_EVAL_LIBLINE([$ICU_LIBS], [$1])
diff --git a/ext/intl/normalizer/normalizer.h b/ext/intl/normalizer/normalizer.h
index 3c6aa0e6eaf..9e71f04aaed 100644
--- a/ext/intl/normalizer/normalizer.h
+++ b/ext/intl/normalizer/normalizer.h
@@ -17,6 +17,19 @@
 
 #include <php.h>
 #include <unicode/utypes.h>
+#if U_ICU_VERSION_MAJOR_NUM < 56
+#include <unicode/unorm.h>
+
+#define NORMALIZER_FORM_D UNORM_NFD
+#define NORMALIZER_NFD UNORM_NFD
+#define NORMALIZER_FORM_KD UNORM_NFKD
+#define NORMALIZER_NFKD UNORM_NFKD
+#define NORMALIZER_FORM_C UNORM_NFC
+#define NORMALIZER_NFC UNORM_NFC
+#define NORMALIZER_FORM_KC UNORM_NFKC
+#define NORMALIZER_NFKC UNORM_NFKC
+#define NORMALIZER_DEFAULT UNORM_DEFAULT
+#else
 #include <unicode/unorm2.h>
 
 #define NORMALIZER_FORM_D 0x4
@@ -30,5 +43,6 @@
 #define NORMALIZER_FORM_KC_CF 0x30
 #define NORMALIZER_NFKC_CF NORMALIZER_FORM_KC_CF
 #define NORMALIZER_DEFAULT NORMALIZER_FORM_C
+#endif
 
 #endif // NORMALIZER_NORMALIZER_H
diff --git a/ext/intl/normalizer/normalizer.stub.php b/ext/intl/normalizer/normalizer.stub.php
index 035f43f1bce..aabba3b63cd 100644
--- a/ext/intl/normalizer/normalizer.stub.php
+++ b/ext/intl/normalizer/normalizer.stub.php
@@ -20,10 +20,12 @@ class Normalizer
     public const int FORM_KC = UNKNOWN;
     /** @cvalue NORMALIZER_NFKC */
     public const int NFKC = UNKNOWN;
+#if U_ICU_VERSION_MAJOR_NUM >= 56
     /** @cvalue NORMALIZER_FORM_KC_CF */
     public const int FORM_KC_CF = UNKNOWN;
     /** @cvalue NORMALIZER_NFKC_CF */
     public const int NFKC_CF = UNKNOWN;
+#endif
 
     /**
      * @tentative-return-type
@@ -37,9 +39,11 @@ public static function normalize(string $string, int $form = Normalizer::FORM_C)
      */
     public static function isNormalized(string $string, int $form = Normalizer::FORM_C): bool {}
 
+#if U_ICU_VERSION_MAJOR_NUM >= 56
     /**
      * @tentative-return-type
      * @alias normalizer_get_raw_decomposition
      */
     public static function getRawDecomposition(string $string, int $form = Normalizer::FORM_C): ?string {}
+#endif
 }
diff --git a/ext/intl/normalizer/normalizer_normalize.cpp b/ext/intl/normalizer/normalizer_normalize.cpp
index 92e8f1166ad..299eac75316 100644
--- a/ext/intl/normalizer/normalizer_normalize.cpp
+++ b/ext/intl/normalizer/normalizer_normalize.cpp
@@ -23,7 +23,11 @@
 
 extern "C" {
 #include "php_intl.h"
+#if U_ICU_VERSION_MAJOR_NUM < 56
+#include "unicode/unorm.h"
+#else
 #include <unicode/unorm2.h>
+#endif
 #include "normalizer.h"
 #include "normalizer_class.h"
 #include "intl_convert.h"
@@ -31,6 +35,7 @@ extern "C" {
 #include <unicode/utf8.h>
 
 
+#if U_ICU_VERSION_MAJOR_NUM >= 56
 static const UNormalizer2 *intl_get_normalizer(zend_long form, UErrorCode *err)
 {/*{{{*/
 	switch (form)
@@ -76,6 +81,7 @@ static UBool intl_is_normalized(zend_long form, const UChar *uinput, int32_t uin
 
 	return unorm2_isNormalized(norm, uinput, uinput_len, err);
 }/*}}}*/
+#endif
 
 /* {{{ Normalize a string. */
 U_CFUNC PHP_FUNCTION( normalizer_normalize )
@@ -117,7 +123,9 @@ U_CFUNC PHP_FUNCTION( normalizer_normalize )
 			break;
 		case NORMALIZER_FORM_C:
 		case NORMALIZER_FORM_KC:
+#if U_ICU_VERSION_MAJOR_NUM >= 56
 		case NORMALIZER_FORM_KC_CF:
+#endif
 			break;
 		default:
 			zend_argument_value_error(2, "must be a a valid normalization form");
@@ -150,7 +158,11 @@ U_CFUNC PHP_FUNCTION( normalizer_normalize )
 	uret_buf = eumalloc( uret_len + 1 );
 
 	/* normalize */
+#if U_ICU_VERSION_MAJOR_NUM < 56
+	size_needed = unorm_normalize( uinput, uinput_len, form, (int32_t) 0 /* options */, uret_buf, uret_len, &status);
+#else
 	size_needed = intl_normalize(form, uinput, uinput_len, uret_buf, uret_len, &status);
+#endif
 
 	/* Bail out if an unexpected error occurred.
 	 * (U_BUFFER_OVERFLOW_ERROR means that *target buffer is not large enough).
@@ -174,7 +186,11 @@ U_CFUNC PHP_FUNCTION( normalizer_normalize )
 		status = U_ZERO_ERROR;
 
 		/* try normalize again */
+#if U_ICU_VERSION_MAJOR_NUM < 56
+		size_needed = unorm_normalize( uinput, uinput_len, form, (int32_t) 0 /* options */, uret_buf, uret_len, &status);
+#else
 		size_needed = intl_normalize(form, uinput, uinput_len, uret_buf, uret_len, &status);
+#endif
 
 		/* Bail out if an unexpected error occurred. */
 		if( U_FAILURE(status)  ) {
@@ -234,7 +250,9 @@ U_CFUNC PHP_FUNCTION( normalizer_is_normalized )
 		case NORMALIZER_FORM_KD:
 		case NORMALIZER_FORM_C:
 		case NORMALIZER_FORM_KC:
+#if U_ICU_VERSION_MAJOR_NUM >= 56
 		case NORMALIZER_FORM_KC_CF:
+#endif
 			break;
 		default:
 			zend_argument_value_error(2, "must be a a valid normalization form");
@@ -264,7 +282,11 @@ U_CFUNC PHP_FUNCTION( normalizer_is_normalized )
 
 
 	/* test string */
+#if U_ICU_VERSION_MAJOR_NUM < 56
+	uret = unorm_isNormalizedWithOptions( uinput, uinput_len, form, (int32_t) 0 /* options */, &status);
+#else
 	uret = intl_is_normalized(form, uinput, uinput_len, &status);
+#endif
 
 	efree( uinput );
 
@@ -328,4 +350,5 @@ U_CFUNC PHP_FUNCTION( normalizer_get_raw_decomposition )
 
 	RETVAL_NEW_STR(intl_convert_utf16_to_utf8(decomposition, decomposition_length, &status));
 }
+#endif
 /* }}} */
diff --git a/ext/intl/php_intl.stub.php b/ext/intl/php_intl.stub.php
index d2ca22c6d29..9ba76806826 100644
--- a/ext/intl/php_intl.stub.php
+++ b/ext/intl/php_intl.stub.php
@@ -541,7 +541,9 @@ function normalizer_normalize(string $string, int $form = Normalizer::FORM_C): s
 
 function normalizer_is_normalized(string $string, int $form = Normalizer::FORM_C): bool {}
 
+#if U_ICU_VERSION_MAJOR_NUM >= 56
 function normalizer_get_raw_decomposition(string $string, int $form = Normalizer::FORM_C): ?string {}
+#endif
 
 /* resourceboundle */
 
@@ -606,9 +608,11 @@ function intltz_get_tz_data_version(): string|false {}
 
 function intltz_get_unknown(): IntlTimeZone {}
 
+#if U_ICU_VERSION_MAJOR_NUM >= 52
 function intltz_get_windows_id(string $timezoneId): string|false {}
 
 function intltz_get_id_for_windows_id(string $timezoneId, ?string $region = null): string|false {}
+#endif
 
 function intltz_has_same_rules(IntlTimeZone $timezone, IntlTimeZone $other): bool {}
 
diff --git a/ext/intl/timezone/timezone.stub.php b/ext/intl/timezone/timezone.stub.php
index 8a8927f7cd8..896e307482e 100644
--- a/ext/intl/timezone/timezone.stub.php
+++ b/ext/intl/timezone/timezone.stub.php
@@ -156,6 +156,7 @@ public static function getTZDataVersion(): string|false {}
      */
     public static function getUnknown(): IntlTimeZone {}
 
+#if U_ICU_VERSION_MAJOR_NUM >= 52
     /**
      * @tentative-return-type
      * @alias intltz_get_windows_id
@@ -167,7 +168,7 @@ public static function getWindowsID(string $timezoneId): string|false {}
      * @alias intltz_get_id_for_windows_id
      */
     public static function getIDForWindowsID(string $timezoneId, ?string $region = null): string|false {}
-
+#endif
     /**
      * @tentative-return-type
      * @alias intltz_has_same_rules
diff --git a/ext/intl/timezone/timezone_methods.cpp b/ext/intl/timezone/timezone_methods.cpp
index 3de186a9ca0..db772e49b83 100644
--- a/ext/intl/timezone/timezone_methods.cpp
+++ b/ext/intl/timezone/timezone_methods.cpp
@@ -583,6 +583,7 @@ U_CFUNC PHP_FUNCTION(intltz_get_error_message)
 	RETURN_STR(message);
 }
 
+#if U_ICU_VERSION_MAJOR_NUM >= 52
 /* {{{ Translate a system timezone (e.g. "America/Los_Angeles" into a
 Windows Timezone (e.g. "Pacific Standard Time")
  */
@@ -656,3 +657,4 @@ U_CFUNC PHP_FUNCTION(intltz_get_id_for_windows_id)
 	RETURN_NEW_STR(id);
 }
 /* }}} */
+#endif
diff --git a/ext/intl/uchar/uchar.cpp b/ext/intl/uchar/uchar.cpp
index f1f777f0ea3..cf2061f39d4 100644
--- a/ext/intl/uchar/uchar.cpp
+++ b/ext/intl/uchar/uchar.cpp
@@ -618,7 +618,9 @@ IC_CHAR_METHOD_CHAR(charMirror)
 IC_CHAR_METHOD_CHAR(tolower)
 IC_CHAR_METHOD_CHAR(toupper)
 IC_CHAR_METHOD_CHAR(totitle)
+#if U_ICU_VERSION_MAJOR_NUM >= 52
 IC_CHAR_METHOD_CHAR(getBidiPairedBracket)
+#endif /* ICU >= 52 */
 #undef IC_CHAR_METHOD_CHAR
 /* }}} */
 
diff --git a/ext/intl/uchar/uchar.stub.php b/ext/intl/uchar/uchar.stub.php
index aa81a9cab30..baaf2bea99a 100644
--- a/ext/intl/uchar/uchar.stub.php
+++ b/ext/intl/uchar/uchar.stub.php
@@ -183,8 +183,10 @@ class IntlChar
     public const int PROPERTY_SENTENCE_BREAK = UNKNOWN;
     /** @cvalue UCHAR_WORD_BREAK */
     public const int PROPERTY_WORD_BREAK = UNKNOWN;
+#if U_ICU_VERSION_MAJOR_NUM >= 52
     /** @cvalue UCHAR_BIDI_PAIRED_BRACKET_TYPE */
     public const int PROPERTY_BIDI_PAIRED_BRACKET_TYPE = UNKNOWN;
+#endif
     /** @cvalue UCHAR_INT_LIMIT */
     public const int PROPERTY_INT_LIMIT = UNKNOWN;
     /** @cvalue UCHAR_GENERAL_CATEGORY_MASK */
@@ -227,8 +229,10 @@ class IntlChar
     public const int PROPERTY_UNICODE_1_NAME = UNKNOWN;
     /** @cvalue UCHAR_UPPERCASE_MAPPING */
     public const int PROPERTY_UPPERCASE_MAPPING = UNKNOWN;
+#if U_ICU_VERSION_MAJOR_NUM >= 52
     /** @cvalue UCHAR_BIDI_PAIRED_BRACKET */
     public const int PROPERTY_BIDI_PAIRED_BRACKET = UNKNOWN;
+#endif
     /** @cvalue UCHAR_STRING_LIMIT */
     public const int PROPERTY_STRING_LIMIT = UNKNOWN;
     /** @cvalue UCHAR_SCRIPT_EXTENSIONS */
@@ -343,6 +347,7 @@ class IntlChar
     public const int CHAR_DIRECTION_DIR_NON_SPACING_MARK = UNKNOWN;
     /** @cvalue U_BOUNDARY_NEUTRAL */
     public const int CHAR_DIRECTION_BOUNDARY_NEUTRAL = UNKNOWN;
+#if U_ICU_VERSION_MAJOR_NUM >= 52
     /** @cvalue U_FIRST_STRONG_ISOLATE */
     public const int CHAR_DIRECTION_FIRST_STRONG_ISOLATE = UNKNOWN;
     /** @cvalue U_LEFT_TO_RIGHT_ISOLATE */
@@ -351,6 +356,7 @@ class IntlChar
     public const int CHAR_DIRECTION_RIGHT_TO_LEFT_ISOLATE = UNKNOWN;
     /** @cvalue U_POP_DIRECTIONAL_ISOLATE */
     public const int CHAR_DIRECTION_POP_DIRECTIONAL_ISOLATE = UNKNOWN;
+#endif
     /** @cvalue U_CHAR_DIRECTION_COUNT */
     public const int CHAR_DIRECTION_CHAR_DIRECTION_COUNT = UNKNOWN;
 
@@ -800,6 +806,7 @@ class IntlChar
     public const int BLOCK_CODE_SUNDANESE_SUPPLEMENT = UNKNOWN;
     /** @cvalue UBLOCK_TAKRI */
     public const int BLOCK_CODE_TAKRI = UNKNOWN;
+#if U_ICU_VERSION_MAJOR_NUM >= 54
     /** @cvalue UBLOCK_BASSA_VAH */
     public const int BLOCK_CODE_BASSA_VAH = UNKNOWN;
     /** @cvalue UBLOCK_CAUCASIAN_ALBANIAN */
@@ -864,6 +871,7 @@ class IntlChar
     public const int BLOCK_CODE_TIRHUTA = UNKNOWN;
     /** @cvalue UBLOCK_WARANG_CITI */
     public const int BLOCK_CODE_WARANG_CITI = UNKNOWN;
+#endif
     /** @cvalue UBLOCK_COUNT */
     public const int BLOCK_CODE_COUNT = UNKNOWN;
     /** @cvalue UBLOCK_INVALID_CODE */
@@ -871,6 +879,7 @@ class IntlChar
 
     /* UBidiPairedBracketType - http://icu-project.org/apiref/icu4c/uchar_8h.html#af954219aa1df452657ec355221c6703d */
 
+#if U_ICU_VERSION_MAJOR_NUM >= 52
     /** @cvalue U_BPT_NONE */
     public const int BPT_NONE = UNKNOWN;
     /** @cvalue U_BPT_OPEN */
@@ -879,6 +888,7 @@ class IntlChar
     public const int BPT_CLOSE = UNKNOWN;
     /** @cvalue U_BPT_COUNT */
     public const int BPT_COUNT = UNKNOWN;
+#endif
 
     /* UEastAsianWidth - http://icu-project.org/apiref/icu4c/uchar_8h.html#a95cc2ca2f9cfd6d0c63eee2c65951333 */
 
@@ -1097,6 +1107,7 @@ class IntlChar
     public const int JG_NYA = UNKNOWN;
     /** @cvalue U_JG_ROHINGYA_YEH */
     public const int JG_ROHINGYA_YEH = UNKNOWN;
+#if U_ICU_VERSION_MAJOR_NUM >= 54
     /** @cvalue U_JG_MANICHAEAN_ALEPH */
     public const int JG_MANICHAEAN_ALEPH = UNKNOWN;
     /** @cvalue U_JG_MANICHAEAN_AYIN */
@@ -1153,6 +1164,7 @@ class IntlChar
     public const int JG_MANICHAEAN_ZAYIN = UNKNOWN;
     /** @cvalue U_JG_STRAIGHT_WAW */
     public const int JG_STRAIGHT_WAW = UNKNOWN;
+#endif
     /** @cvalue U_JG_COUNT */
     public const int JG_COUNT = UNKNOWN;
 
@@ -1217,12 +1229,14 @@ class IntlChar
     public const int WB_NEWLINE = UNKNOWN;
     /** @cvalue U_WB_REGIONAL_INDICATOR */
     public const int WB_REGIONAL_INDICATOR = UNKNOWN;
+#if U_ICU_VERSION_MAJOR_NUM >= 52
     /** @cvalue U_WB_HEBREW_LETTER */
     public const int WB_HEBREW_LETTER = UNKNOWN;
     /** @cvalue U_WB_SINGLE_QUOTE */
     public const int WB_SINGLE_QUOTE = UNKNOWN;
     /** @cvalue U_WB_DOUBLE_QUOTE */
     public const int WB_DOUBLE_QUOTE = UNKNOWN;
+#endif
     /** @cvalue U_WB_COUNT */
     public const int WB_COUNT = UNKNOWN;
 
@@ -1427,8 +1441,10 @@ public static function foldCase(int|string $codepoint, int $options = IntlChar::
     /** @tentative-return-type */
     public static function forDigit(int $digit, int $base = 10): int {}
 
+#if U_ICU_VERSION_MAJOR_NUM >= 52
     /** @tentative-return-type */
     public static function getBidiPairedBracket(int|string $codepoint): int|string|null {}
+#endif
 
     /** @tentative-return-type */
     public static function getBlockCode(int|string $codepoint): ?int {}
-- 
2.50.1

